{"version":3,"sources":["constants/symbols.js","utils/isEven.js","services/squares.js","components/GameBoard.js","components/Game.js","components/Slash.js","App.js","constants/routes.js","reportWebVitals.js","utils/isLocalHost.js","actions/types.js","store/reducer.js","index.js","store/configureStore.js"],"names":["set1","icon","label","isEven","num","symbolsToSquares","symbolSet","dupeSymbolSet","alphabetArray","split","yCount","xCount","gridUnit","parseInt","Math","sqrt","length","shuffle","map","symbol","i","serializedSymbol","id","toString","serializeSymbolSet","squareColumnClasses","symbolsLen","GameBoardContainer","styled","div","GameSquare","GameBoard","className","symbols","toast","error","toastId","autoClose","squares","square","data-id","data-label","style","fontSize","Game","numSquares","Slash","App","basename","exact","path","component","position","hideProgressBar","newestOnTop","closeOnClick","rtl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","RESET_CURRENT_FILES","initialState","loading","reducer","state","action","type","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","enhancers","composedEnhancers","composeWithDevTools","createStore","dispatch","rawDispatch","addPromiseSupport","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.deda2272.chunk.js","sourcesContent":["export const set1 = [\n  {\n    icon: 'fas fa-star',\n    label: 'Star'\n  },\n  {\n    icon: 'fas fa-dragon',\n    label: 'Dragon'\n  },\n  {\n    icon: 'fas fa-fish',\n    label: 'Fish'\n  },\n  {\n    icon: 'far fa-sun',\n    label: 'Sun'\n  },\n  {\n    icon: 'fas fa-moon',\n    label: 'Moon'\n  },\n  {\n    icon: 'fas fa-plane',\n    label: 'Airplane'\n  },\n  {\n    icon: 'fas fa-crow',\n    label: 'Bird'\n  },\n  {\n    icon: 'fas fa-tree',\n    label: 'Tree'\n  }\n];\n","const isEven = (num) => {\n  if (num < 2) return false;\n  if (num % 2 > 0) return false;\n\n  return true;\n};\n\nexport default isEven;\n","import { shuffle } from 'lodash';\nimport { toast } from 'react-toastify';\nimport isEven from '../utils/isEven';\n\n/**\n * @summary generates ordered pairs based on symbol set\n * @param {array of objects} symbolSet\n * @returns array of objects with ordered pairs values as value of \"id\"\n */\nexport const serializeSymbolSet = (symbolSet) => {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const alphabetArray = alphabet.split('');\n  let yCount = 0; // Y-Axis Label Count\n  let xCount = 0; // X-Axis Label Count\n  const gridUnit = parseInt(Math.sqrt(symbolSet.length), 10);\n  const randomSymbolSet = shuffle(symbolSet);\n  const serializedSymbolSet = randomSymbolSet.map((symbol, i) => {\n    if (i === gridUnit || (yCount > 0 && i % gridUnit === 0)) {\n      yCount += 1;\n    }\n\n    xCount += 1;\n\n    const serializedSymbol = {\n      ...symbol,\n      id: alphabetArray[yCount] + (xCount).toString()\n    };\n\n    if (xCount === gridUnit) {\n      xCount = 0;\n    }\n\n    return serializedSymbol;\n  });\n\n  return serializedSymbolSet;\n};\n\n/**\n * @summary duplicates provided symbolSet and randomizes based on Fisher-Yates algorithm via lodash\n * @param {array of objects} symbolSet\n */\nexport const symbolsToSquares = (symbolSet) => {\n  const dupeSymbolSet = [\n    ...symbolSet,\n    ...symbolSet\n  ];\n  const randomSymbolSet = shuffle(dupeSymbolSet);\n  const serializedSymbolSet = serializeSymbolSet(randomSymbolSet);\n\n  return serializedSymbolSet;\n};\n\n/**\n * @summary error checking against provided symbol set\n * @param {array of objects} symbolSet\n */\nexport const isValidSymbolSet = (symbolSet) => {\n  // We need an even number of symbols to\n  // construct a playable grid where each card\n  // has the correct corresponding ordered pairs, ex: A3, B1\n  if (!isEven(symbolSet.length)) {\n    toast.error('An even number of symbols is required.', { toastId: 'evenSymbols', autoClose: false });\n    return false;\n  }\n\n  // Currently allow only 12 symbols\n  // TODO think through how to allow more\n  // 104 is technically the max, but running into\n  // UI limitations with bootstrap grid based on 12\n  if (symbolSet.length > 12) {\n    toast.error('12 symbols is the maximum allowed.', { toastId: 'evenSymbols', autoClose: false });\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * @summary creates appropriate bootstrap classes to show cards correctly\n * @param {array of objects} symbolSet\n */\nexport const squareColumnClasses = (symbolSet) => {\n  const symbolsLen = symbolSet.length;\n\n  if (symbolsLen === 2 || symbolsLen === 4) {\n    return 'col-6';\n  }\n\n  if (symbolsLen === 6) {\n    return 'col-4';\n  }\n\n  return 'col-3';\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  isValidSymbolSet,\n  squareColumnClasses,\n  symbolsToSquares\n} from '../services/squares';\n\nconst GameBoardContainer = styled.div`\n  max-width: 760px;\n`;\n\nconst GameSquare = styled.div`\n  min-height: 60px;\n  min-width: 60px;\n\n  @media (min-width: 600px) {\n    min-height: 80px;\n    min-width: 80px;\n  }\n`;\n\nconst GameBoard = ({\n  className,\n  symbols\n}) => {\n  // TODO support larger symbol sets than 12\n  if (!isValidSymbolSet(symbols)) {\n    return null;\n  }\n\n  const squares = symbolsToSquares(symbols);\n\n  return (\n    <GameBoardContainer\n      className={`m-auto px-5 d-flex align-items-center justify-content-center h-100 ${className || ''}`}\n    >\n      <div>\n        <div className=\"row align-items-start\">\n          {squares.map((square, i) => (\n            <div\n              data-id={square.id}\n              data-label={square.label}\n              className={squareColumnClasses(symbols)}\n              key={i}\n            >\n              <GameSquare\n                className=\"bg-secondary mb-3 d-flex align-items-center justify-content-center text-white\"\n              >\n                <i className={square.icon} style={{ fontSize: '2rem' }} />\n              </GameSquare>\n            </div>\n          ))}\n        </div>\n      </div>\n    </GameBoardContainer>\n  );\n};\n\nexport default GameBoard;\n","import React from 'react';\nimport { set1 } from '../constants/symbols';\nimport GameBoard from './GameBoard';\n\nconst Game = ({ className }) => {\n  return (\n    <GameBoard\n      className={className}\n      numSquares={12}\n      symbols={set1}\n    />\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\n\nconst Slash = () => {\n  return (\n    <Game />\n  );\n};\n\nexport default Slash;\n","import React, { Fragment } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n// import TopNav from '../TopNav';\nimport Slash from './components/Slash';\nimport { SLASH } from './constants/routes';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Fragment>\n        {/* <TopNav /> */}\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route exact path={SLASH} component={Slash} />\n          </Switch>\n        </div>\n        {/* <Modals /> */}\n        <ToastContainer\n          className=\"text-center\"\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          // pauseOnFocusLoss\n          // draggable\n          // pauseOnHover\n        />\n      </Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","export const SLASH = '/';\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default isLocalhost;\n","export const SET_CURRENT_FILES = 'SET_CURRENT_FILES';\nexport const RESET_CURRENT_FILES = 'RESET_CURRENT_FILES';\n","import {\n  RESET_CURRENT_FILES\n} from '../actions/types';\n\nconst initialState = {\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_CURRENT_FILES:\n      return {\n        ...state,\n        ...action\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport isLocalhost from '../utils/isLocalHost';\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport reducer from './reducer'; // import rootReducer from './reducers/index';\n\nconst addPromiseSupport = (store) => {\n  const rawDispatch = store.dispatch;\n  return (action) => {\n    if (typeof action.then === 'function') {\n      return action.then(rawDispatch);\n    }\n    return rawDispatch(action);\n  };\n};\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]; // loggerMiddleware\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer]; // monitorReducersEnhancer\n  const composedEnhancers = isLocalhost ? composeWithDevTools(...enhancers) : middlewareEnhancer;\n  const store = createStore(reducer, preloadedState, composedEnhancers); // rootReducer\n\n  store.dispatch = addPromiseSupport(store);\n\n  return store;\n}\n"],"sourceRoot":""}