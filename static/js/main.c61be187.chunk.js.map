{"version":3,"sources":["constants/symbols.js","utils/isEven.js","services/squares.js","components/GameKeyboardInput.js","services/speechRecognition.js","components/GameBoard/styles.js","components/GameVoiceInput.js","components/GameTouchInput.js","components/GameBoard/index.js","components/TitleScreen/FlipCard.js","components/TitleScreen/index.js","components/Game.js","components/Slash.js","App.js","constants/routes.js","reportWebVitals.js","utils/isLocalHost.js","actions/types.js","store/reducer.js","index.js","store/configureStore.js"],"names":["roundData","icon","label","isEven","num","symbolsToSquares","symbolSet","dupeSymbolSet","alphabetArray","split","yCount","xCount","gridUnit","parseInt","Math","sqrt","length","shuffle","map","symbol","i","yLabel","serializedSymbol","id","toString","xLabel","serializeSymbolSet","isValidSymbolSet","toast","error","toastId","autoClose","squareColumnClasses","symbolsLen","GameKeyboardInput","onSubmit","loading","className","name","type","maxLength","minLength","autoFocus","disabled","onKeyUp","e","preventDefault","value","currentTarget","grammarPairs","GameTitle","styled","h1","GameBoardContainer","div","GameSquareContainer","GameSquare","props","GameVoiceInput","GameTouchInput","WebkitSpeechRecognition","window","webkitSpeechRecognition","WebkitSpeechGrammarList","webkitSpeechGrammarList","undefined","AudioMatch","recognition","continuous","lang","interimResults","maxAlternatives","speechRecognitionList","grammar","join","addFromString","grammars","initializeSpeechRecognition","GameBoard","squares","symbols","loadNextRound","useState","inputMethod","setInputMethod","currentRound","setCurrentRound","roundLoaded","setRoundLoaded","setLoading","userWonRound","setUserWonRound","userWinsGame","setUserWinsGame","prevOrderedPair","setPrevOrderedPair","orderedPair","setOrderedPair","correctOrderedPairs","setCorrectOrderedPairs","microphonePermission","setMicrophonePermission","isListening","setIsListening","useEffect","navigator","permissions","query","then","res","state","canPlayWithVoice","useMemo","onstart","console","log","onresult","event","letter","results","transcript","confidence","selectOrderedPair","onerror","stop","startRecognition","setTimeout","start","abortRecognition","abort","initPlayWithVoice","a","mediaDevices","getUserMedia","audio","stream","resetForNextSelection","keyboardInput","document","getElementById","focus","selectedOrderedPair","sop","toUpperCase","square","dismiss","dataset","cop","showIcon","visibility","Object","keys","nextRoundSymbolLength","success","handleInputMethod","newInputMethod","catch","data-label","onClick","style","fontSize","inputOrderedPair","role","aria-label","nextRound","handleLoadNextRound","FlipCard","show","backClassName","TitleScreen","startGame","show1","setShow1","show2","setShow2","show3","setShow3","show4","setShow4","gameReady","setGameReady","mounted","Game","setSquares","setSymbols","showTitleScreen","setShowTitleScreen","round","numSymbols","shuffledRoundData","symbolsData","slice","Slash","App","basename","exact","path","component","position","hideProgressBar","newestOnTop","closeOnClick","rtl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","RESET_CURRENT_FILES","initialState","reducer","action","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","enhancers","composedEnhancers","composeWithDevTools","createStore","dispatch","rawDispatch","addPromiseSupport","configureStore","ReactDOM","render"],"mappings":"8QAAaA,EAAY,CACvB,CACEC,KAAM,aACNC,MAAO,OAET,CACED,KAAM,iBACNC,MAAO,WAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,UAET,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,OAET,CACED,KAAM,aACNC,MAAO,OAET,CACED,KAAM,aACNC,MAAO,OAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,SAGT,CACED,KAAM,mBACNC,MAAO,aAET,CACED,KAAM,mBACNC,MAAO,aAET,CACED,KAAM,aACNC,MAAO,OAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,YAGT,CACED,KAAM,iBACNC,MAAO,OAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,YAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,YAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,SAET,CACED,KAAM,eACNC,MAAO,SAET,CACED,KAAM,gBACNC,MAAO,UAGT,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,OAET,CACED,KAAM,gBACNC,MAAO,UAET,CACED,KAAM,gBACNC,MAAO,UAET,CACED,KAAM,uBACNC,MAAO,YAGT,CACED,KAAM,wBACNC,MAAO,aAET,CACED,KAAM,iBACNC,MAAO,Y,gBC9HIC,EAPA,SAACC,GACd,QAAIA,EAAM,MACNA,EAAM,EAAI,ICyDHC,EAAmB,SAACC,GAC/B,IAAMC,EAAa,sBACdD,GADc,YAEdA,IAKL,OA1DgC,SAACA,GACjC,IACME,EADW,6BACcC,MAAM,IACjCC,EAAS,EACTC,EAAS,EACPC,EAAWC,SAASC,KAAKC,KAAKT,EAAUU,QAAS,IAsCvD,OArCwBC,kBAAQX,GACYY,KAAI,SAACC,EAAQC,IACnDA,IAAMR,GAAaF,EAAS,GAAKU,EAAIR,IAAa,KACpDF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","file":"static/js/main.c61be187.chunk.js","sourcesContent":["export const roundData = [\n  {\n    icon: 'fas fa-cat',\n    label: 'Cat'\n  },\n  {\n    icon: 'fas fa-feather',\n    label: 'Feather'\n  },\n  {\n    icon: 'fas fa-star',\n    label: 'Star'\n  },\n  {\n    icon: 'fas fa-dragon',\n    label: 'Dragon'\n  },\n  {\n    icon: 'fas fa-fish',\n    label: 'Fish'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'far fa-sun',\n    label: 'Sun'\n  },\n  {\n    icon: 'fas fa-car',\n    label: 'Car'\n  },\n  {\n    icon: 'fas fa-bug',\n    label: 'Bug'\n  },\n  {\n    icon: 'fas fa-frog',\n    label: 'Frog'\n  },\n  {\n    icon: 'fas fa-heart',\n    label: 'Heart'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'fas fa-ice-cream',\n    label: 'Ice Cream'\n  },\n  {\n    icon: 'fas fa-paperclip',\n    label: 'Paperclip'\n  },\n  {\n    icon: 'fas fa-dog',\n    label: 'Dog'\n  },\n  {\n    icon: 'fas fa-bell',\n    label: 'Bell'\n  },\n  {\n    icon: 'fas fa-cut',\n    label: 'Scissors'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'fas fa-bus-alt',\n    label: 'Bus'\n  },\n  {\n    icon: 'fas fa-moon',\n    label: 'Moon'\n  },\n  {\n    icon: 'fas fa-plane',\n    label: 'Airplane'\n  },\n  {\n    icon: 'fas fa-crow',\n    label: 'Bird'\n  },\n  {\n    icon: 'fas fa-tree',\n    label: 'Tree'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'fas fa-umbrella',\n    label: 'Umbrella'\n  },\n  {\n    icon: 'fab fa-canadian-maple-leaf',\n    label: 'Leaf'\n  },\n  {\n    icon: 'fas fa-truck',\n    label: 'Truck'\n  },\n  {\n    icon: 'fas fa-robot',\n    label: 'Robot'\n  },\n  {\n    icon: 'fas fa-anchor',\n    label: 'Anchor'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'fas fa-bone',\n    label: 'Bone'\n  },\n  {\n    icon: 'far fa-eye',\n    label: 'Eye'\n  },\n  {\n    icon: 'fas fa-trophy',\n    label: 'Trophy'\n  },\n  {\n    icon: 'fas fa-circle',\n    label: 'Circle'\n  },\n  {\n    icon: 'fas fa-football-ball',\n    label: 'Football'\n  },\n  // //////////////////////// 5\n  {\n    icon: 'fas fa-user-astronaut',\n    label: 'Astronaut'\n  },\n  {\n    icon: 'fas fa-glasses',\n    label: 'Glasses'\n  }\n];\n","const isEven = (num) => {\n  if (num < 2) return false;\n  if (num % 2 > 0) return false;\n\n  return true;\n};\n\nexport default isEven;\n","import { shuffle } from 'lodash';\nimport { toast } from 'react-toastify';\nimport isEven from '../utils/isEven';\n\n/**\n * @summary generates ordered pairs based on symbol set\n * @param {array of objects} symbolSet\n * @returns array of objects with ordered pairs values as value of \"id\"\n */\nexport const serializeSymbolSet = (symbolSet) => {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const alphabetArray = alphabet.split('');\n  let yCount = 0; // Y-Axis Label Count\n  let xCount = 0; // X-Axis Label Count\n  const gridUnit = parseInt(Math.sqrt(symbolSet.length), 10);\n  const randomSymbolSet = shuffle(symbolSet);\n  const serializedSymbolSet = randomSymbolSet.map((symbol, i) => {\n    if (i === gridUnit || (yCount > 0 && i % gridUnit === 0)) {\n      yCount += 1;\n    }\n\n    xCount += 1;\n\n    // yAxis Label\n    // yCount is increased when moving into second row\n    // ex: grid of 16 (gridUnit = 4)\n    let yLabel = '';\n    if (i === 0) {\n      // 0 = A\n      yLabel = alphabetArray[yCount];\n    } else if ((i + 1) === (yCount * gridUnit) + 1) {\n      // 5 = B : yCount (1) * gridUnit (4) + 1\n      // 9 = C : yCount (2) * gridUnit (4) + 1\n      // 13 = D : yCount (3) * gridUnit (4) + 1\n      yLabel = alphabetArray[yCount];\n    }\n    // yAxis Label\n\n    const serializedSymbol = {\n      ...symbol,\n      id: alphabetArray[yCount] + xCount.toString(),\n      yLabel,\n      xLabel: (i <= gridUnit - 1) ? i + 1 : ''\n    };\n\n    if (xCount === gridUnit) {\n      xCount = 0;\n    }\n\n    return serializedSymbol;\n  });\n\n  return serializedSymbolSet;\n};\n\n/**\n * @summary duplicates provided symbolSet and randomizes based on Fisher-Yates algorithm via lodash\n * @param {array of objects} symbolSet\n */\nexport const symbolsToSquares = (symbolSet) => {\n  const dupeSymbolSet = [\n    ...symbolSet,\n    ...symbolSet\n  ];\n  const randomSymbolSet = shuffle(dupeSymbolSet);\n  const serializedSymbolSet = serializeSymbolSet(randomSymbolSet);\n\n  return serializedSymbolSet;\n};\n\n/**\n * @summary error checking against provided symbol set\n * @param {array of objects} symbolSet\n */\nexport const isValidSymbolSet = (symbolSet) => {\n  // We need an even number of symbols to\n  // construct a playable grid where each card\n  // has the correct corresponding ordered pairs, ex: A3, B1\n  if (!isEven(symbolSet.length)) {\n    toast.error('An even number of symbols is required.', { toastId: 'evenSymbols', autoClose: false });\n    return false;\n  }\n\n  // Currently allow only 12 symbols\n  // TODO think through how to allow more\n  // 104 is technically the max, but running into\n  // UI limitations with bootstrap grid based on 12\n  if (symbolSet.length > 12) {\n    toast.error('12 symbols is the maximum allowed.', { toastId: 'evenSymbols', autoClose: false });\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * @summary creates appropriate bootstrap classes to show cards correctly\n * @param {array of objects} symbolSet\n */\nexport const squareColumnClasses = (symbolSet) => {\n  const symbolsLen = symbolSet.length;\n\n  if (symbolsLen === 2 || symbolsLen === 4) {\n    return 'col-6';\n  }\n\n  if (symbolsLen === 6) {\n    return 'col-4';\n  }\n\n  return 'col-3';\n};\n","import React from 'react';\n\nconst GameKeyboardInput = ({\n  onSubmit,\n  loading\n}) => {\n  const handleCheckOrderedPair = (e) => {\n    e.preventDefault();\n    const { value } = e.currentTarget;\n\n    if (value !== '' && value.length === 2) {\n      onSubmit(value);\n    }\n  };\n\n  return (\n    <div className=\"m-auto\">\n      <input\n        id=\"keyboardInput\"\n        name=\"inputOrderedPair\"\n        type=\"text\"\n        maxLength=\"2\"\n        minLength=\"2\"\n        className=\"text-capitalize form-control-lg\"\n        autoFocus\n        disabled={loading}\n        onKeyUp={handleCheckOrderedPair}\n      />\n      <div className=\"text-muted text-center small\">\n        Enter ordered pair, ex: A2\n      </div>\n    </div>\n  );\n};\n\nexport default GameKeyboardInput;\n","export const grammarPairs = [\n  'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7',\n  'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7',\n  'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7',\n  'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7',\n  'E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7',\n  'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7',\n  'G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7',\n  'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7',\n  'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7'\n];\n\nexport const initializeSpeechRecognition = () => {\n  const WebkitSpeechRecognition = window.webkitSpeechRecognition;\n  const WebkitSpeechGrammarList = window.webkitSpeechGrammarList;\n\n  if (window.AudioMatch === undefined) {\n    window.AudioMatch = { recognition: {} };\n  }\n\n  if (WebkitSpeechRecognition) {\n    window.AudioMatch.recognition = new WebkitSpeechRecognition();\n    window.AudioMatch.recognition.continuous = false;\n    window.AudioMatch.recognition.lang = 'en-US';\n    window.AudioMatch.recognition.interimResults = false;\n    window.AudioMatch.recognition.maxAlternatives = 1;\n\n    if (WebkitSpeechGrammarList) {\n      // WebkitSpeechGrammarList is not currently available in Safari\n      // and does not have any effect in any other browser.\n      const speechRecognitionList = new WebkitSpeechGrammarList();\n      const grammar = `#JSGF V1.0; grammar pairs; public <pair> = ${grammarPairs.join(' | ')} ;`;\n      speechRecognitionList.addFromString(grammar, 1);\n      window.AudioMatch.recognition.grammars = speechRecognitionList;\n    }\n  }\n};\n","import styled from 'styled-components';\n\nexport const GameTitle = styled.h1`\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n  margin-bottom: 4rem;\n`;\n\nexport const GameBoardContainer = styled.div`\n  max-width: 760px;\n`;\n\nexport const GameSquareContainer = styled.div`\n  position: relative;\n`;\n\nexport const GameSquare = styled.div`\n  min-height: 60px;\n  min-width: 60px;\n\n  &::before {\n    position: absolute;\n    content: \"${(props) => props.xLabel}\";\n    top: -40px;\n    color: black;\n  }\n\n  &::after {\n    position: absolute;\n    content: \"${(props) => props.yLabel}\";\n    left: -40px;\n    color: black;\n  }\n\n  @media (min-width: 600px) {\n    min-height: 80px;\n    min-width: 80px;\n  }\n`;\n","import React from 'react';\n\nconst GameVoiceInput = () => {\n  return (\n    <div className=\"m-auto\">\n      <div className=\"text-muted text-center small\">\n        Speak ordered pair, ex: A2\n      </div>\n    </div>\n  );\n};\n\nexport default GameVoiceInput;\n","import React from 'react';\n\nconst GameTouchInput = () => {\n  return (\n    <div className=\"m-auto\">\n      <div className=\"text-muted text-center small\">\n        Press a card to find matching symbols.\n      </div>\n    </div>\n  );\n};\n\nexport default GameTouchInput;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { squareColumnClasses } from '../../services/squares';\nimport GameKeyboardInput from '../GameKeyboardInput';\nimport { initializeSpeechRecognition } from '../../services/speechRecognition';\nimport {\n  GameBoardContainer, GameSquare, GameSquareContainer, GameTitle\n} from './styles';\nimport GameVoiceInput from '../GameVoiceInput';\nimport GameTouchInput from '../GameTouchInput';\n\n// Initialize SpeechRecognition\n// instantiate window.AudioMatch.recognition\ninitializeSpeechRecognition();\n\nconst GameBoard = ({\n  squares,\n  className,\n  symbols,\n  loadNextRound,\n  roundData\n}) => {\n  const [inputMethod, setInputMethod] = useState('touch');\n  const [currentRound, setCurrentRound] = useState(0);\n  const [roundLoaded, setRoundLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [userWonRound, setUserWonRound] = useState(false);\n  const [userWinsGame, setUserWinsGame] = useState(false);\n  const [prevOrderedPair, setPrevOrderedPair] = useState(null);\n  const [orderedPair, setOrderedPair] = useState(null);\n  const [correctOrderedPairs, setCorrectOrderedPairs] = useState({});\n  const [microphonePermission, setMicrophonePermission] = useState('');\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    navigator.permissions.query({ name: 'microphone' }).then((res) => {\n      // @state {string} granted, denied, prompt\n      setMicrophonePermission(res.state);\n    });\n  }, []);\n\n  // TODO support larger symbol sets than 12\n\n  const canPlayWithVoice = useMemo(() => {\n    return window.webkitSpeechRecognition && window.webkitSpeechGrammarList;\n  }, [window.webkitSpeechRecognition, window.webkitSpeechGrammarList]);\n\n  window.AudioMatch.recognition.onstart = () => {\n    console.log('recognition (onstart)');\n    setIsListening(true);\n  };\n\n  window.AudioMatch.recognition.onresult = (event) => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent\n    const letter = event.results[0][0].transcript;\n\n    console.log('recognition (onresult) : transcript', letter);\n    console.log('recognition (onresult) : confidence', event.results[0][0].confidence);\n\n    selectOrderedPair(letter);\n  };\n\n  window.AudioMatch.recognition.onerror = (event) => {\n    console.log(`recognition (onerror): ${event.error}`);\n\n    if (inputMethod === 'voice') {\n      if (event?.error === 'no-speech') {\n        toast.error('No speech detected. Click microphone to reactivate.', { autoClose: false });\n        setIsListening(false);\n        window.AudioMatch.recognition.stop();\n        setInputMethod('touch');\n      }\n\n      if (event?.error === 'aborted' || event?.error === 'network') {\n        startRecognition();\n      }\n    }\n  };\n\n  const startRecognition = () => {\n    setTimeout(() => {\n      try {\n        window.AudioMatch.recognition.start();\n        setIsListening(true);\n        console.log('recognition (start) success');\n      } catch (error) {\n        console.log('recognition (error)', error);\n      }\n    }, 400);\n  };\n\n  const abortRecognition = () => {\n    window.AudioMatch.recognition.abort();\n    setIsListening(false);\n    console.log('recognition (abort)');\n  };\n\n  useEffect(() => {\n    if (!roundLoaded && !userWinsGame) {\n      loadNextRound(currentRound);\n      setRoundLoaded(true);\n    }\n  }, [squares, symbols]);\n\n  const initPlayWithVoice = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      console.log('getUserMedia (success)', stream);\n      setMicrophonePermission(true);\n    } catch (error) {\n      console.log('getUserMedia (error)', error);\n      setMicrophonePermission(false);\n      setInputMethod('touch');\n    }\n  };\n\n  const resetForNextSelection = () => {\n    const keyboardInput = document.getElementById('keyboardInput');\n\n    setOrderedPair(null);\n    setPrevOrderedPair(null);\n    setLoading(false);\n\n    console.log('resetForNextSelection');\n    if (inputMethod === 'voice') {\n      startRecognition();\n    }\n\n    if (keyboardInput && inputMethod === 'keyboard') {\n      keyboardInput.focus();\n    }\n  };\n\n  const selectOrderedPair = (selectedOrderedPair) => {\n    const sop = selectedOrderedPair.toUpperCase();\n    const square = document.getElementById(sop);\n    const keyboardInput = document.getElementById('keyboardInput');\n\n    toast.dismiss();\n\n    if (inputMethod === 'voice') {\n      abortRecognition();\n    }\n\n    if (!square) {\n      toast.error('Guess ordered pairs within the grid.');\n\n      if (inputMethod === 'keyboard') {\n        keyboardInput.value = '';\n      }\n\n      if (inputMethod === 'voice') {\n        startRecognition();\n      }\n\n      return false;\n    }\n\n    const { dataset: { label } } = square;\n\n    if (orderedPair) {\n      setPrevOrderedPair(orderedPair);\n    }\n\n    setOrderedPair([sop, label]);\n\n    // 0 = Ordered Pair, ex: A2\n    // 1 = Label, ex: Fish\n    if (orderedPair) {\n      // Check if labels are the same and if ordered pairs are different\n      setLoading(true);\n\n      if (orderedPair[1] === label && orderedPair[0] !== sop) {\n        const cop = {\n          ...correctOrderedPairs,\n          [sop]: label,\n          [orderedPair[0]]: orderedPair[1]\n        };\n\n        setCorrectOrderedPairs(cop);\n\n        // Starting speech recognition again after aborting requires waiting at least 400ms\n        setTimeout(() => {\n          resetForNextSelection();\n        }, 400);\n      } else {\n        toast.error('Try again');\n        // Delay reset to allow the user to see the choices they made;\n        // Starting speech recognition again after aborting requires waiting at least 400ms\n        setTimeout(() => {\n          resetForNextSelection();\n        }, 1500);\n      }\n    }\n\n    if (!orderedPair && inputMethod === 'voice') {\n      startRecognition();\n    }\n\n    if (keyboardInput && inputMethod === 'keyboard') {\n      keyboardInput.value = '';\n    }\n  };\n\n  const showIcon = (square) => {\n    let visibility = false;\n\n    if (correctOrderedPairs[square.id] !== undefined) {\n      visibility = true;\n    }\n\n    if (orderedPair && orderedPair[0] === square.id) {\n      visibility = true;\n    }\n\n    if (prevOrderedPair && prevOrderedPair[0] === square.id) {\n      visibility = true;\n    }\n\n    return visibility;\n  };\n\n  const handleLoadNextRound = () => {\n    const nextRound = currentRound + 1;\n    setUserWonRound(false);\n    setRoundLoaded(false);\n    setCorrectOrderedPairs({});\n    setCurrentRound(nextRound);\n    loadNextRound(nextRound);\n\n    if (inputMethod === 'voice') {\n      startRecognition();\n    }\n  };\n\n  if (!squares || !symbols) return null;\n\n  // User won round & wins game logic\n  if (!userWonRound && Object.keys(correctOrderedPairs).length === squares.length) {\n    setUserWonRound(true);\n\n    const nextRound = (currentRound + 1) + 1;\n    const nextRoundSymbolLength = nextRound * 2;\n\n    if (nextRoundSymbolLength > 12 || nextRoundSymbolLength > roundData.length) {\n      // If the next round symbol length is...\n      // 1. greater than 12, the game is complete\n      // 2. greater than total symbols available, the game is complete\n      //\n      // TODO remove #1 logic once UI exist to inform user that a larger screen\n      // is needed to play higher levels.\n      setUserWinsGame(true);\n      toast.success('You win!');\n\n      return null;\n    }\n\n    toast.success('Nice job!');\n  }\n\n  /**\n   *\n   * @param {string} newInputMethod // touch, keyboard, voice\n   *\n   */\n  const handleInputMethod = (newInputMethod) => {\n    toast.dismiss();\n\n    // Only abort speechRecognition when current inputMethod is voice\n    // And the newly selected (newInputMethod) is NOT voice\n    if (inputMethod === 'voice' && newInputMethod !== 'voice') {\n      abortRecognition();\n    }\n\n    if (inputMethod !== newInputMethod) {\n      setInputMethod(newInputMethod);\n\n      if (newInputMethod === 'voice') {\n        navigator.mediaDevices.getUserMedia({ audio: true }).then(() => {\n          startRecognition();\n        }).catch(() => {\n          initPlayWithVoice();\n        });\n      }\n    }\n  };\n\n  console.log('Listening', isListening);\n\n  return (\n    <GameBoardContainer\n      className={`m-auto px-5 d-flex align-items-center justify-content-center h-100 ${className || ''}`}\n    >\n      <div>\n        <GameTitle className=\"text-muted\">\n          Round {currentRound + 1}\n        </GameTitle>\n        <div className=\"row align-items-start\">\n          {squares.map((square, i) => (\n            <div\n              key={i}\n              className={squareColumnClasses(symbols)}\n            >\n              <GameSquareContainer>\n                <GameSquare\n                  id={square.id}\n                  inputMethod={inputMethod}\n                  data-label={square.label}\n                  className={`game-square bg-${correctOrderedPairs[square.id] !== undefined ? 'success' : 'secondary'} mb-3 d-flex align-items-center justify-content-center text-white`}\n                  xLabel={inputMethod !== 'touch' ? square.xLabel : ' '}\n                  yLabel={inputMethod !== 'touch' ? square.yLabel : ' '}\n                  onClick={() => {\n                    if (inputMethod !== 'touch') {\n                      setInputMethod('touch');\n                    }\n\n                    if (!loading) {\n                      selectOrderedPair(square.id);\n                    }\n                  }}\n                >\n                  {showIcon(square) && (\n                    <i className={square.icon} style={{ fontSize: '2rem' }} />\n                  )}\n                </GameSquare>\n              </GameSquareContainer>\n            </div>\n          ))}\n        </div>\n\n        {!userWonRound && (\n          <div\n            className=\"d-flex align-item-center justify-content-center flex-column\"\n          >\n            {inputMethod === 'keyboard' && (\n              <GameKeyboardInput\n                onSubmit={(inputOrderedPair) => {\n                  selectOrderedPair(inputOrderedPair);\n                }}\n                loading={loading}\n              />\n            )}\n\n            {inputMethod === 'voice' && (\n              <GameVoiceInput />\n            )}\n\n            {inputMethod === 'touch' && (\n              <GameTouchInput />\n            )}\n\n            <div className=\"mx-auto mt-3\">\n              <div\n                className=\"btn-group border rounded\"\n                role=\"group\"\n                aria-label=\"Basic example\"\n              >\n                <button\n                  type=\"button\"\n                  className={`btn btn-${inputMethod === 'touch' ? 'primary' : 'light'} border-right`}\n                  onClick={() => {\n                    handleInputMethod('touch');\n                  }}\n                >\n                  <i className=\"fa fa-hand-pointer-o\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className={`btn btn-${inputMethod === 'keyboard' ? 'primary' : 'light'} border-right`}\n                  onClick={() => {\n                    handleInputMethod('keyboard');\n                  }}\n                >\n                  <i className=\"fas fa-keyboard\" />\n                </button>\n\n                {canPlayWithVoice && (\n                  <button\n                    type=\"button\"\n                    className={`position-relative btn btn-${inputMethod === 'voice' ? 'primary' : 'light'}`}\n                    onClick={() => {\n                      handleInputMethod('voice');\n                    }}\n                  >\n                    {microphonePermission !== 'denied' ? (\n                      <i className=\"fas fa-microphone\" />\n                    ) : (\n                      <i className=\"fa fa-microphone-slash text-muted\" />\n                    )}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {userWonRound && (\n          <div\n            className=\"d-flex align-item-center justify-content-center flex-column\"\n          >\n            <div className=\"mx-auto mt-3\">\n              {userWinsGame ? (\n                <div>\n                  <h4>\n                    <i className=\"fas fa-check-circle text-success\" /> You win!\n                  </h4>\n                </div>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary btn-lg\"\n                  onClick={() => {\n                    handleLoadNextRound();\n                  }}\n                >\n                  Next Round\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </GameBoardContainer>\n  );\n};\n\nexport default GameBoard;\n","import React from 'react';\nimport './flipCard.css';\n\nconst FlipCard = ({\n  icon,\n  show,\n  className = 'col-sm-6',\n  backClassName = 'bg-success'\n}) => {\n  return (\n    <div className={className}>\n      <div className={`flip-card ${show ? 'show-icon' : ''}`}>\n        <div className=\"flip-card-inner\">\n          <div className=\"flip-card-front\" />\n          <div className={`flip-card-back ${backClassName}`}>\n            <i className={icon} style={{ fontSize: '2rem' }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FlipCard;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport FlipCard from './FlipCard';\nimport './flipCard.css';\n\nconst GameTitle = styled.h1`\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n  margin-bottom: 4rem;\n`;\n\nconst TitleScreen = ({ startGame }) => {\n  const [show1, setShow1] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [show3, setShow3] = useState(false);\n  const [show4, setShow4] = useState(false);\n  const [gameReady, setGameReady] = useState(false);\n\n  useEffect(() => {\n    let mounted = true;\n\n    setTimeout(() => {\n      if (mounted) setShow1(true);\n    }, 150);\n\n    setTimeout(() => {\n      if (mounted) setShow2(true);\n    }, 300);\n\n    setTimeout(() => {\n      if (mounted) setShow3(true);\n    }, 450);\n\n    setTimeout(() => {\n      if (mounted) setShow4(true);\n    }, 600);\n\n    setTimeout(() => {\n      if (mounted) setGameReady(true);\n    }, 750);\n\n    return function cleanup() {\n      mounted = false;\n    };\n  });\n\n  return (\n    <div\n      className=\"d-flex align-items-center justify-content-center h-100\"\n    >\n      <div>\n        <GameTitle className=\"text-muted\">\n          Memory Match\n        </GameTitle>\n        <div>\n          <div className=\"row mb-3\">\n            <FlipCard\n              icon=\"fas fa-robot\"\n              show={show3}\n              backClassName={gameReady ? 'bg-success' : 'bg-secondary'}\n            />\n            <FlipCard\n              icon=\"fas fa-anchor\"\n              show={gameReady ? false : show1}\n              backClassName=\"bg-secondary\"\n            />\n          </div>\n          <div className=\"row\">\n            <FlipCard\n              icon=\"fas fa-plane\"\n              show={gameReady ? false : show2}\n              backClassName=\"bg-secondary\"\n            />\n            <FlipCard\n              icon=\"fas fa-robot\"\n              show={show4}\n              backClassName={gameReady ? 'bg-success' : 'bg-secondary'}\n            />\n          </div>\n        </div>\n\n        <div className=\"d-flex justify-content-center mt-5\">\n          <button\n            className={`btn btn-lg ${gameReady ? 'btn-primary' : 'btn-light border'}`}\n            onClick={startGame}\n            disabled={!gameReady}\n            type=\"button\"\n          >\n            Start Game\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TitleScreen;\n","import React, { useState } from 'react';\nimport { shuffle } from 'lodash';\nimport { roundData } from '../constants/symbols';\nimport { isValidSymbolSet, symbolsToSquares } from '../services/squares';\nimport GameBoard from './GameBoard';\nimport TitleScreen from './TitleScreen';\n\nconst Game = ({ className }) => {\n  const [squares, setSquares] = useState(null);\n  const [symbols, setSymbols] = useState(null);\n  const [showTitleScreen, setShowTitleScreen] = useState(true);\n\n  const loadNextRound = (round = 0) => {\n    const numSymbols = (round + 1) * 2; // 0=2, 1=4, 2=6, 3=8, etc.\n    const shuffledRoundData = shuffle(roundData);\n    const symbolsData = shuffledRoundData.slice(0, numSymbols);\n\n    if (!isValidSymbolSet(symbolsData)) {\n      return null;\n    }\n\n    setSquares(symbolsToSquares(symbolsData));\n    setSymbols(symbolsData);\n  };\n\n  if (showTitleScreen) {\n    return (\n      <TitleScreen\n        startGame={() => {\n          setShowTitleScreen(false);\n        }}\n      />\n    );\n  }\n\n  return (\n    <GameBoard\n      className={className}\n      squares={squares}\n      symbols={symbols}\n      roundData={roundData}\n      loadNextRound={loadNextRound}\n    />\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\n\nconst Slash = () => {\n  return (\n    <Game />\n  );\n};\n\nexport default Slash;\n","import React, { Fragment } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n// import TopNav from '../TopNav';\nimport Slash from './components/Slash';\nimport { SLASH } from './constants/routes';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Fragment>\n        {/* <TopNav /> */}\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route exact path={SLASH} component={Slash} />\n          </Switch>\n        </div>\n        {/* <Modals /> */}\n        <ToastContainer\n          className=\"text-center\"\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          // pauseOnFocusLoss\n          // draggable\n          // pauseOnHover\n        />\n      </Fragment>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","export const SLASH = '/';\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default isLocalhost;\n","export const SET_CURRENT_FILES = 'SET_CURRENT_FILES';\nexport const RESET_CURRENT_FILES = 'RESET_CURRENT_FILES';\n","import {\n  RESET_CURRENT_FILES\n} from '../actions/types';\n\nconst initialState = {\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_CURRENT_FILES:\n      return {\n        ...state,\n        ...action\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport isLocalhost from '../utils/isLocalHost';\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport reducer from './reducer'; // import rootReducer from './reducers/index';\n\nconst addPromiseSupport = (store) => {\n  const rawDispatch = store.dispatch;\n  return (action) => {\n    if (typeof action.then === 'function') {\n      return action.then(rawDispatch);\n    }\n    return rawDispatch(action);\n  };\n};\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]; // loggerMiddleware\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer]; // monitorReducersEnhancer\n  const composedEnhancers = isLocalhost ? composeWithDevTools(...enhancers) : middlewareEnhancer;\n  const store = createStore(reducer, preloadedState, composedEnhancers); // rootReducer\n\n  store.dispatch = addPromiseSupport(store);\n\n  return store;\n}\n"],"sourceRoot":""}